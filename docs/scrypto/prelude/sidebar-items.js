window.SIDEBAR_ITEMS = {"attr":[["scrypto","Attribute that derives code to encode, decode and/or describe the struct or enum, using Scrypto data and schema model."]],"constant":[["ACCOUNT_BLUEPRINT",""],["ACCOUNT_PACKAGE","The address of the account package."],["CLOCK",""],["CLOCK_BLUEPRINT",""],["ECDSA_SECP256K1_TOKEN","The ECDSA virtual resource address."],["EDDSA_ED25519_TOKEN","The ED25519 virtual resource address."],["EPOCH_MANAGER",""],["EPOCH_MANAGER_BLUEPRINT",""],["FAUCET_BLUEPRINT",""],["FAUCET_COMPONENT","The address of the faucet component, test network only."],["FAUCET_PACKAGE","The address of the faucet package."],["MAX_SCRYPTO_SBOR_DEPTH",""],["NON_FUNGIBLE_ID_MAX_LENGTH",""],["PACKAGE_BLUEPRINT",""],["RADIX_TOKEN","The XRD resource address."],["RESOURCE_MANAGER_BLUEPRINT",""],["SCRYPTO_SBOR_V1_PAYLOAD_PREFIX",""],["SYSTEM_TOKEN","The system token which allows access to system resources (e.g. setting epoch)"],["TRANSACTION_PROCESSOR_BLUEPRINT",""],["TYPE_BLOB",""],["TYPE_BUCKET",""],["TYPE_COMPONENT",""],["TYPE_COMPONENT_ADDRESS",""],["TYPE_DECIMAL",""],["TYPE_ECDSA_SECP256K1_PUBIC_KEY",""],["TYPE_ECDSA_SECP256K1_SIGNATURE",""],["TYPE_EDDSA_ED25519_PUBIC_KEY",""],["TYPE_EDDSA_ED25519_SIGNATURE",""],["TYPE_EXPRESSION",""],["TYPE_HASH",""],["TYPE_KEY_VALUE_STORE",""],["TYPE_NON_FUNGIBLE_ADDRESS",""],["TYPE_NON_FUNGIBLE_ID",""],["TYPE_PACKAGE_ADDRESS",""],["TYPE_PRECISE_DECIMAL",""],["TYPE_PROOF",""],["TYPE_RESOURCE_ADDRESS",""],["TYPE_SYSTEM_ADDRESS",""],["TYPE_VAULT",""]],"derive":[["Decode","Derive code that decodes this data structure from a byte array."],["Describe","Derive code that describes this data structure."],["Encode","Derive code that encodes this data structure"],["NonFungibleData","Derive code that describe a non-fungible data structure."],["TypeId","Derive code that returns the type ID."]],"enum":[["AccessRule",""],["AccessRuleEntry",""],["AccessRuleKey",""],["AccessRuleNode",""],["ComponentAddress","An instance of a blueprint, which lives in the ledger state."],["DecodeError","Represents an error ocurred during decoding."],["MintParams",""],["NonFungibleId","Represents a key for a non-fungible resource"],["NonFungibleIdType","Represents type of non-fungible id"],["PackageAddress","A collection of blueprints, compiled and published as a single unit."],["ParseBlobError","Represents an error when parsing Blob."],["ParseBucketError","Represents an error when decoding bucket."],["ParseDecimalError","Represents an error when parsing Decimal from another type."],["ParseEcdsaSecp256k1PublicKeyError","Represents an error when parsing ECDSA public key from hex."],["ParseEcdsaSecp256k1SignatureError",""],["ParseEddsaEd25519PublicKeyError","Represents an error when parsing ED25519 public key from hex."],["ParseEddsaEd25519SignatureError",""],["ParseHashError","Represents an error when parsing hash."],["ParseI128Error",""],["ParseI16Error",""],["ParseI256Error",""],["ParseI32Error",""],["ParseI384Error",""],["ParseI512Error",""],["ParseI64Error",""],["ParseI768Error",""],["ParseI8Error",""],["ParseNonFungibleAddressError","Represents an error when parsing non-fungible address."],["ParseNonFungibleIdError","Represents an error when decoding non-fungible id."],["ParseNonFungibleIdTypeError",""],["ParsePreciseDecimalError","Represents an error when parsing PreciseDecimal from another type."],["ParseProofError","Represents an error when decoding proof."],["ParseU128Error",""],["ParseU16Error",""],["ParseU256Error",""],["ParseU32Error",""],["ParseU384Error",""],["ParseU512Error",""],["ParseU64Error",""],["ParseU768Error",""],["ParseU8Error",""],["ParseVaultError","Represents an error when decoding vault."],["ParsedScryptoInvocation",""],["Parsei128Error",""],["Parsei16Error",""],["Parsei32Error",""],["Parsei64Error",""],["Parsei8Error",""],["ParseisizeError",""],["Parseu128Error",""],["Parseu16Error",""],["Parseu32Error",""],["Parseu64Error",""],["Parseu8Error",""],["ParseusizeError",""],["ProofRule",""],["ProofValidationError","Represents an error when validating proof."],["ProofValidationMode","Specifies the validation mode that should be used for validating a `Proof`."],["PublicKey",""],["ResourceAddress","Represents a resource address."],["ResourceMethodAuthKey",""],["ResourceType","Represents the type of a resource."],["RoundingMode","Defines how rounding should be done."],["SchemaPathParseError",""],["SchemaSubPath",""],["ScryptoCustomTypeId",""],["ScryptoCustomValue",""],["ScryptoInvocation",""],["ScryptoValueDecodeError",""],["ScryptoValueSerializationType",""],["Signature",""],["SignatureWithPublicKey",""],["SoftCount",""],["SoftDecimal",""],["SoftResource",""],["SoftResourceOrNonFungible",""],["SoftResourceOrNonFungibleList",""],["SystemAddress",""],["TimePrecision",""],["ValueIndexingError",""],["ValueReplacingError",""],["VaultMethodAuthKey",""]],"fn":[["display_type_id",""],["format_custom_value",""],["format_elements",""],["format_non_fungible_id_contents",""],["format_scrypto_value",""],["format_tuple",""],["format_type_id",""],["hash","Computes the hash digest of a message."],["match_schema_with_value",""],["require",""],["require_all_of",""],["require_amount",""],["require_any_of",""],["require_n_of",""],["sbor_type_id",""],["scrypto_decode","Decodes a data structure from a byte array."],["scrypto_encode","Encodes a data structure into byte array."],["serialize_custom_value",""],["serialize_schemaless_scrypto_value",""],["serialize_schemaless_scrypto_value_slice",""],["sha256","Computes the SHA-256 digest of a message."],["sha256_twice","Computes the double SHA-256 digest of a message."],["sha3","Computes the SHA3 digest of a message."]],"macro":[["access_and_or",""],["access_rule_node",""],["args","Constructs argument list for Scrypto function/method invocation."],["blueprint","Declares a blueprint."],["count",""],["dec","Creates a `Decimal` from literals."],["i","Creates a safe integer from literals. You must specify the type of the integer you want to create."],["import","Imports a blueprint from its ABI."],["pdec","Creates a `PreciseDecimal` from literals."],["rule",""],["vec","Creates a `Vec` containing the arguments."]],"mod":[["decimal",""],["integer","Definitions of safe integers and uints."],["precise_decimal",""],["rounding_mode",""],["vec","A contiguous growable array type with heap-allocated contents, written `Vec<T>`."]],"struct":[["AccessRules",""],["AccessRulesAddAccessCheckInvocation",""],["AccessRulesGetLengthInvocation",""],["AccessRulesSetGroupAccessRuleInvocation",""],["AccessRulesSetGroupMutabilityInvocation",""],["AccessRulesSetMethodAccessRuleInvocation",""],["AccessRulesSetMethodMutabilityInvocation",""],["ArrayValue",""],["AuthZoneAssertAccessRuleInvocation",""],["AuthZoneClearInvocation",""],["AuthZoneCreateProofByAmountInvocation",""],["AuthZoneCreateProofByIdsInvocation",""],["AuthZoneCreateProofInvocation",""],["AuthZoneDrainInvocation",""],["AuthZonePopInvocation",""],["AuthZonePushInvocation",""],["BTreeMap","An ordered map based on a B-Tree."],["BTreeSet","An ordered set based on a B-Tree."],["Blob",""],["Bucket","Represents a transient resource container."],["BucketCreateProofInvocation",""],["BucketGetAmountInvocation",""],["BucketGetNonFungibleIdsInvocation",""],["BucketGetResourceAddressInvocation",""],["BucketPutInvocation",""],["BucketTakeInvocation",""],["BucketTakeNonFungiblesInvocation",""],["BytesValue",""],["ClockCompareCurrentTimeInvocation",""],["ClockCreateInvocation",""],["ClockGetCurrentTimeInvocation",""],["ClockSetCurrentTimeInvocation",""],["ComponentClaimRoyaltyInvocation",""],["ComponentGlobalizeInvocation",""],["ComponentGlobalizeWithOwnerInvocation",""],["ComponentSetRoyaltyConfigInvocation",""],["Decimal","`Decimal` represents a 256 bit representation of a fixed-scale decimal number."],["DisplayableScryptoSborTypeId",""],["EcdsaSecp256k1PublicKey","Represents an ECDSA public key."],["EcdsaSecp256k1Signature","Represents an ECDSA signature."],["EcdsaSecp256k1Verifier","EcdsaSecp256k1 signature verifier."],["EddsaEd25519PublicKey","Represents an ED25519 public key."],["EddsaEd25519Signature","Represents an ED25519 signature."],["EddsaEd25519Verifier","EddsaEd25519 signature verifier."],["EnumVariant",""],["EpochManagerCreateInvocation",""],["EpochManagerGetCurrentEpochInvocation",""],["EpochManagerSetEpochInvocation",""],["Hash","Represents a 32-byte hash digest."],["HashMap","A hash map implemented with quadratic probing and SIMD lookup."],["HashSet","A hash set implemented as a `HashMap` where the value is `()`."],["I128","Provides safe integer arithmetic."],["I16","Provides safe integer arithmetic."],["I256","Provides safe integer arithmetic."],["I32","Provides safe integer arithmetic."],["I384","Provides safe integer arithmetic."],["I512","Provides safe integer arithmetic."],["I64","Provides safe integer arithmetic."],["I768","Provides safe integer arithmetic."],["I8","Provides safe integer arithmetic."],["IndexedScryptoValue",""],["MetadataGetInvocation",""],["MetadataSetInvocation",""],["NonFungibleAddress","Identifier for a non-fungible unit."],["PackageClaimRoyaltyExecutable",""],["PackageClaimRoyaltyInvocation",""],["PackagePublishInvocation",""],["PackagePublishWithOwnerInvocation",""],["PackageSetRoyaltyConfigExecutable",""],["PackageSetRoyaltyConfigInvocation",""],["PreciseDecimal","`PreciseDecimal` represents a 512 bit representation of a fixed-scale decimal number."],["Proof","Represents a proof of owning some resource."],["ProofCloneInvocation",""],["ProofGetAmountInvocation",""],["ProofGetNonFungibleIdsInvocation",""],["ProofGetResourceAddressInvocation",""],["ResourceManagerBucketBurnInvocation",""],["ResourceManagerBurnInvocation",""],["ResourceManagerCreateBucketInvocation",""],["ResourceManagerCreateInvocation",""],["ResourceManagerCreateVaultInvocation",""],["ResourceManagerCreateWithOwnerInvocation",""],["ResourceManagerGetNonFungibleInvocation",""],["ResourceManagerGetResourceTypeInvocation",""],["ResourceManagerGetTotalSupplyInvocation",""],["ResourceManagerMintInvocation",""],["ResourceManagerNonFungibleExistsInvocation",""],["ResourceManagerSetVaultAuthMutabilityInvocation",""],["ResourceManagerUpdateNonFungibleDataInvocation",""],["ResourceManagerUpdateVaultAuthInvocation",""],["RoyaltyConfig",""],["RoyaltyConfigBuilder",""],["SchemaPath","Describes a value located in some sbor given a schema for that sbor"],["ScryptoCustomValueVisitor","A visitor the indexes scrypto custom values."],["ScryptoValueFormattingContext",""],["String","A UTF-8–encoded, growable string."],["U128","Provides safe integer arithmetic."],["U16","Provides safe integer arithmetic."],["U256","Provides safe integer arithmetic."],["U32","Provides safe integer arithmetic."],["U384","Provides safe integer arithmetic."],["U512","Provides safe integer arithmetic."],["U64","Provides safe integer arithmetic."],["U768","Provides safe integer arithmetic."],["U8","Provides safe integer arithmetic."],["ValueFormattingContext",""],["Vault",""],["VaultCreateProofByAmountInvocation",""],["VaultCreateProofByIdsInvocation",""],["VaultCreateProofInvocation",""],["VaultGetAmountInvocation",""],["VaultGetNonFungibleIdsInvocation",""],["VaultGetResourceAddressInvocation",""],["VaultLockFeeInvocation",""],["VaultPutInvocation",""],["VaultRecallInvocation",""],["VaultRecallNonFungiblesInvocation",""],["VaultTakeInvocation",""],["VaultTakeNonFungiblesInvocation",""],["Vec","A contiguous growable array type, written as `Vec<T>`, short for ‘vector’."],["WorktopAssertContainsAmountInvocation",""],["WorktopAssertContainsInvocation",""],["WorktopAssertContainsNonFungiblesInvocation",""],["WorktopDrainInvocation",""],["WorktopPutInvocation",""],["WorktopTakeAllInvocation",""],["WorktopTakeAmountInvocation",""],["WorktopTakeNonFungiblesInvocation",""]],"trait":[["By","Trait for short hand notation for try_from().unwrap() As opposed to `try_from(x).unwrap()` this will panic if the conversion fails."],["Cbrt",""],["CheckedAdd",""],["CheckedDiv",""],["CheckedMul",""],["CheckedNeg",""],["CheckedPow",""],["CheckedRem",""],["CheckedSub",""],["Decode","A data structure that can be decoded from a byte array using SBOR."],["Encode","A data structure that can be serialized into a byte array using SBOR."],["FromPrimitive","A generic trait for converting a number to a value."],["FromPublicKey",""],["FromStr","Parse a value from a string"],["Min",""],["NonFungibleData","Represents the data structure of a non-fungible."],["NthRoot",""],["One","Defines a multiplicative identity element for `Self`."],["Pow","Binary operator for raising a value to a power."],["PrimIntExt",""],["ScryptoDecode",""],["ScryptoEncode",""],["ScryptoTypeId",""],["SerializableScryptoValue",""],["Signed","Useful functions for signed numbers (i.e. numbers that can be negative)."],["Sqrt",""],["ToOwned","A generalization of `Clone` to borrowed data."],["ToPrimitive","A generic trait for converting a value to a number."],["ToString","A trait for converting a value to a `String`."],["Truncate",""],["TypeId","A SBOR type ID."],["Zero","Defines an additive identity element for `Self`."]],"type":[["ScryptoDecoder",""],["ScryptoEncoder",""],["ScryptoSborTypeId",""],["ScryptoValue",""]]};