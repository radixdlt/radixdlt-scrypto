window.SIDEBAR_ITEMS = {"enum":[["ParseDecimalError","Represents an error when parsing Decimal from another type."],["ParseI128Error",""],["ParseI16Error",""],["ParseI256Error",""],["ParseI32Error",""],["ParseI384Error",""],["ParseI512Error",""],["ParseI64Error",""],["ParseI768Error",""],["ParseI8Error",""],["ParsePreciseDecimalError","Represents an error when parsing PreciseDecimal from another type."],["ParseU128Error",""],["ParseU16Error",""],["ParseU256Error",""],["ParseU32Error",""],["ParseU384Error",""],["ParseU512Error",""],["ParseU64Error",""],["ParseU768Error",""],["ParseU8Error",""],["Parsei128Error",""],["Parsei16Error",""],["Parsei32Error",""],["Parsei64Error",""],["Parsei8Error",""],["ParseisizeError",""],["Parseu128Error",""],["Parseu16Error",""],["Parseu32Error",""],["Parseu64Error",""],["Parseu8Error",""],["ParseusizeError",""],["RoundingMode","Defines how rounding should be done."]],"mod":[["decimal",""],["integer","Definitions of safe integers and uints."],["precise_decimal",""],["rounding_mode",""]],"struct":[["Decimal","`Decimal` represents a 256 bit representation of a fixed-scale decimal number."],["I128","Provides safe integer arithmetic."],["I16","Provides safe integer arithmetic."],["I256","Provides safe integer arithmetic."],["I32","Provides safe integer arithmetic."],["I384","Provides safe integer arithmetic."],["I512","Provides safe integer arithmetic."],["I64","Provides safe integer arithmetic."],["I768","Provides safe integer arithmetic."],["I8","Provides safe integer arithmetic."],["PreciseDecimal","`PreciseDecimal` represents a 512 bit representation of a fixed-scale decimal number."],["U128","Provides safe integer arithmetic."],["U16","Provides safe integer arithmetic."],["U256","Provides safe integer arithmetic."],["U32","Provides safe integer arithmetic."],["U384","Provides safe integer arithmetic."],["U512","Provides safe integer arithmetic."],["U64","Provides safe integer arithmetic."],["U768","Provides safe integer arithmetic."],["U8","Provides safe integer arithmetic."]],"trait":[["By","Trait for short hand notation for try_from().unwrap() As opposed to `try_from(x).unwrap()` this will panic if the conversion fails."],["Cbrt",""],["CheckedAdd",""],["CheckedDiv",""],["CheckedMul",""],["CheckedNeg",""],["CheckedPow",""],["CheckedRem",""],["CheckedSub",""],["Min",""],["NthRoot",""],["PrimIntExt",""],["Sqrt",""],["Truncate",""]]};