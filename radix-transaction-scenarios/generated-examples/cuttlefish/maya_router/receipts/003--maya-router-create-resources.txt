TRANSACTION STATUS: COMMITTED SUCCESS

TRANSACTION COST: 1.06958007912 XRD
├─ Network execution: 0.27977365 XRD, 5595473 execution cost units
├─ Network finalization: 0.2572747 XRD, 5145494 finalization cost units
├─ Tip: 0 XRD
├─ Network Storage: 0.53253172912 XRD
└─ Royalties: 0 XRD

LOGS: 0

EVENTS: 12
├─ Emitter: Method { node: internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u, module_id: Main }
   Event: LockFeeEvent {
     amount: Decimal("5000"),
   }
├─ Emitter: Method { node: resource_sim1tkl8f4ev0djxy2jjy4fpnaexhw0t0t39seqs26u0mfqjzn3e4m80zf, module_id: Main }
   Event: MintFungibleResourceEvent {
     amount: Decimal("100000000000"),
   }
├─ Emitter: Method { node: resource_sim1t5ulpyse43vcfndkelufmzzap46aprkxtkc8hsdydpgfpxytdwq7dj, module_id: Main }
   Event: MintFungibleResourceEvent {
     amount: Decimal("100000000000"),
   }
├─ Emitter: Method { node: resource_sim1tkl8f4ev0djxy2jjy4fpnaexhw0t0t39seqs26u0mfqjzn3e4m80zf, module_id: Main }
   Event: VaultCreationEvent {
     vault_id: NodeId(hex("58c9dc45c7ca6f05c27022023393cdb22575472071e1dddbd118f450736d")),
   }
├─ Emitter: Method { node: internal_vault_sim1tryac3w8efhstsnsygpr8y7dkgjh23eqw8samk73rr69qumddqxnnv, module_id: Main }
   Event: DepositEvent {
     amount: Decimal("100000000000"),
   }
├─ Emitter: Method { node: account_sim1cyc3r8ntawdamyhh6u0sttq22r036rzjcdpnakzl2c3n4tul2ua5ud, module_id: Main }
   Event: DepositEvent::Fungible(
     ResourceAddress(Reference("resource_sim1tkl8f4ev0djxy2jjy4fpnaexhw0t0t39seqs26u0mfqjzn3e4m80zf")),
     Decimal("100000000000"),
   )
├─ Emitter: Method { node: resource_sim1t5ulpyse43vcfndkelufmzzap46aprkxtkc8hsdydpgfpxytdwq7dj, module_id: Main }
   Event: VaultCreationEvent {
     vault_id: NodeId(hex("589d2d88d70f21cef762cfea2b2f8ccd2d5dfe12c8cce2346455f429f81b")),
   }
├─ Emitter: Method { node: internal_vault_sim1tzwjmzxhpusuaamzel4zktuve5k4mlsjerxwydry2h6zn7qmkz9ylv, module_id: Main }
   Event: DepositEvent {
     amount: Decimal("100000000000"),
   }
├─ Emitter: Method { node: account_sim1cyc3r8ntawdamyhh6u0sttq22r036rzjcdpnakzl2c3n4tul2ua5ud, module_id: Main }
   Event: DepositEvent::Fungible(
     ResourceAddress(Reference("resource_sim1t5ulpyse43vcfndkelufmzzap46aprkxtkc8hsdydpgfpxytdwq7dj")),
     Decimal("100000000000"),
   )
├─ Emitter: Method { node: internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u, module_id: Main }
   Event: PayFeeEvent {
     amount: Decimal("1.06958007912"),
   }
├─ Emitter: Method { node: internal_vault_sim1tpsesv77qvw782kknjks9g3x2msg8cc8ldshk28pkf6m6lkhun3sel, module_id: Main }
   Event: DepositEvent {
     amount: Decimal("0.53479003956"),
   }
└─ Emitter: Method { node: resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3, module_id: Main }
   Event: BurnFungibleResourceEvent {
     amount: Decimal("0.53479003956"),
   }

STATE UPDATES: 10 entities
├─ consensusmanager_sim1scxxxxxxxxxxcnsmgrxxxxxxxxx000999665565xxxxxxxxxxc06cl across 1 partitions
  └─ Partition(64): 1 change
    └─ Set: Field(2)
       Value: UNLOCKED ConsensusManagerValidatorRewardsFieldPayload::V1(
         ValidatorRewardsSubstate {
           proposer_rewards: {
             0u8 => Decimal("0.4763568143875"),
           },
           rewards_vault: Vault(Own("internal_vault_sim1tpsesv77qvw782kknjks9g3x2msg8cc8ldshk28pkf6m6lkhun3sel")),
         },
       )
├─ transactiontracker_sim1stxxxxxxxxxxtxtrakxxxxxxxxx006844685494xxxxxxxxx4d5zd2 across 2 partitions
  ├─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED TransactionTrackerSubstate::V1(
         TransactionTrackerSubstateV1 {
           start_epoch: 1u64,
           start_partition: 65u8,
           partition_range_start_inclusive: 65u8,
           partition_range_end_inclusive: 255u8,
           epochs_per_partition: 100u64,
         },
       )
  └─ Partition(65): 1 change
    └─ Set: Hash(hex("9134df0b40d312e7e7c1f7b81aad43f2b94c6d2d5b9bf398eb0eb2ea9cc390cd"))
       Value: UNLOCKED TransactionStatus::V1(
         TransactionStatusV1::CommittedSuccess,
       )
├─ component_sim1cptxxxxxxxxxfaucetxxxxxxxxx000527798379xxxxxxxxxhkrefh across 1 partitions
  └─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED Faucet {
         vault: Vault(Own("internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u")),
         transactions: KeyValueStore(Own("internal_keyvaluestore_sim1krn7clzr3qmq2zhwr77mdenksxswf00yeh8tn3vyzesg4kr3p54gv8")),
       }
├─ account_sim1cyc3r8ntawdamyhh6u0sttq22r036rzjcdpnakzl2c3n4tul2ua5ud across 1 partitions
  └─ Partition(65): 2 changes
    ├─ Set: ResourceAddress(Reference("resource_sim1tkl8f4ev0djxy2jjy4fpnaexhw0t0t39seqs26u0mfqjzn3e4m80zf"))
       Value: UNLOCKED AccountResourceVaultEntryPayload::V1(
         Vault(Own("internal_vault_sim1tryac3w8efhstsnsygpr8y7dkgjh23eqw8samk73rr69qumddqxnnv")),
       )
    └─ Set: ResourceAddress(Reference("resource_sim1t5ulpyse43vcfndkelufmzzap46aprkxtkc8hsdydpgfpxytdwq7dj"))
       Value: UNLOCKED AccountResourceVaultEntryPayload::V1(
         Vault(Own("internal_vault_sim1tzwjmzxhpusuaamzel4zktuve5k4mlsjerxwydry2h6zn7qmkz9ylv")),
       )
├─ internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u across 1 partitions
  └─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED FungibleVaultBalanceFieldPayload::V1(
         LiquidFungibleResource(Decimal("99999999999989998.09457274245")),
       )
├─ resource_sim1tkl8f4ev0djxy2jjy4fpnaexhw0t0t39seqs26u0mfqjzn3e4m80zf across 5 partitions
  ├─ Partition(2): 6 changes
    ├─ Set: "info_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "https://example.com",
         ),
       )
    ├─ Set: "name"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "Fizz",
         ),
       )
    ├─ Set: "description"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "Fizz token",
         ),
       )
    ├─ Set: "symbol"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "FIZZ",
         ),
       )
    ├─ Set: "icon_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "https://example.com/icon.png",
         ),
       )
    └─ Set: "tags"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::StringArray(
           [
             "test",
           ],
         ),
       )
  ├─ Partition(5): 1 change
    └─ Set: Field(0)
       Value: LOCKED RoleAssignmentOwnerFieldPayload::V1(
         OwnerRoleSubstate {
           rule: AccessRule::DenyAll,
           updater: OwnerRoleUpdater::None,
         },
       )
  ├─ Partition(6): 12 changes
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("depositor") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::AllowAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("burner_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("freezer") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("freezer_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("burner") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::AllowAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("recaller") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("withdrawer") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::AllowAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("recaller_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("depositor_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("minter") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("withdrawer_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    └─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("minter_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
  ├─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: LOCKED FungibleResourceManagerDivisibilityFieldPayload::V1(
         18u8,
       )
  └─ Partition(0): 1 change
    └─ Set: TypeInfo
       Value: TypeInfoSubstate::Object(
         ObjectInfo {
           blueprint_info: BlueprintInfo {
             blueprint_id: BlueprintId {
               package_address: PackageAddress(Reference("package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9")),
               blueprint_name: "FungibleResourceManager",
             },
             blueprint_version: BlueprintVersion {
               major: 1u32,
               minor: 0u32,
               patch: 0u32,
             },
             outer_obj_info: OuterObjectInfo::None,
             features: [
               "burn",
             ],
             generic_substitutions: [],
           },
           object_type: ObjectType::Global {
             modules: {
               AttachedModuleId::RoleAssignment => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
               AttachedModuleId::Metadata => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
             },
           },
         },
       )
├─ resource_sim1t5ulpyse43vcfndkelufmzzap46aprkxtkc8hsdydpgfpxytdwq7dj across 5 partitions
  ├─ Partition(2): 6 changes
    ├─ Set: "info_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "https://example.com",
         ),
       )
    ├─ Set: "name"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "Buzz",
         ),
       )
    ├─ Set: "description"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "Buzz",
         ),
       )
    ├─ Set: "symbol"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "BUZZ",
         ),
       )
    ├─ Set: "icon_url"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::String(
           "https://example.com/icon.png",
         ),
       )
    └─ Set: "tags"
       Value: LOCKED MetadataEntryEntryPayload::V1(
         GenericMetadataValue::StringArray(
           [
             "test",
           ],
         ),
       )
  ├─ Partition(5): 1 change
    └─ Set: Field(0)
       Value: LOCKED RoleAssignmentOwnerFieldPayload::V1(
         OwnerRoleSubstate {
           rule: AccessRule::DenyAll,
           updater: OwnerRoleUpdater::None,
         },
       )
  ├─ Partition(6): 12 changes
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("depositor") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::AllowAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("burner_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("freezer") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("freezer_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("burner") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::AllowAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("recaller") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("withdrawer") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::AllowAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("recaller_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("depositor_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("minter") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    ├─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("withdrawer_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
    └─ Set: ModuleRoleKey { module: ModuleId::Main, key: RoleKey("minter_updater") }
       Value: UNLOCKED RoleAssignmentAccessRuleEntryPayload::V1(
         AccessRule::DenyAll,
       )
  ├─ Partition(64): 2 changes
    ├─ Set: Field(0)
       Value: LOCKED FungibleResourceManagerDivisibilityFieldPayload::V1(
         18u8,
       )
    └─ Set: Field(1)
       Value: UNLOCKED FungibleResourceManagerTotalSupplyFieldPayload::V1(
         Decimal("100000000000"),
       )
  └─ Partition(0): 1 change
    └─ Set: TypeInfo
       Value: TypeInfoSubstate::Object(
         ObjectInfo {
           blueprint_info: BlueprintInfo {
             blueprint_id: BlueprintId {
               package_address: PackageAddress(Reference("package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9")),
               blueprint_name: "FungibleResourceManager",
             },
             blueprint_version: BlueprintVersion {
               major: 1u32,
               minor: 0u32,
               patch: 0u32,
             },
             outer_obj_info: OuterObjectInfo::None,
             features: [
               "track_total_supply",
               "burn",
             ],
             generic_substitutions: [],
           },
           object_type: ObjectType::Global {
             modules: {
               AttachedModuleId::RoleAssignment => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
               AttachedModuleId::Metadata => BlueprintVersion {
                 major: 1u32,
                 minor: 0u32,
                 patch: 0u32,
               },
             },
           },
         },
       )
├─ internal_vault_sim1tryac3w8efhstsnsygpr8y7dkgjh23eqw8samk73rr69qumddqxnnv across 2 partitions
  ├─ Partition(0): 1 change
    └─ Set: TypeInfo
       Value: TypeInfoSubstate::Object(
         ObjectInfo {
           blueprint_info: BlueprintInfo {
             blueprint_id: BlueprintId {
               package_address: PackageAddress(Reference("package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9")),
               blueprint_name: "FungibleVault",
             },
             blueprint_version: BlueprintVersion {
               major: 1u32,
               minor: 0u32,
               patch: 0u32,
             },
             outer_obj_info: OuterObjectInfo::Some {
               outer_object: GlobalAddress(Reference("resource_sim1tkl8f4ev0djxy2jjy4fpnaexhw0t0t39seqs26u0mfqjzn3e4m80zf")),
             },
             features: [],
             generic_substitutions: [],
           },
           object_type: ObjectType::Owned,
         },
       )
  └─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED FungibleVaultBalanceFieldPayload::V1(
         LiquidFungibleResource(Decimal("100000000000")),
       )
├─ internal_vault_sim1tzwjmzxhpusuaamzel4zktuve5k4mlsjerxwydry2h6zn7qmkz9ylv across 2 partitions
  ├─ Partition(0): 1 change
    └─ Set: TypeInfo
       Value: TypeInfoSubstate::Object(
         ObjectInfo {
           blueprint_info: BlueprintInfo {
             blueprint_id: BlueprintId {
               package_address: PackageAddress(Reference("package_sim1pkgxxxxxxxxxresrcexxxxxxxxx000538436477xxxxxxxxxaj0zg9")),
               blueprint_name: "FungibleVault",
             },
             blueprint_version: BlueprintVersion {
               major: 1u32,
               minor: 0u32,
               patch: 0u32,
             },
             outer_obj_info: OuterObjectInfo::Some {
               outer_object: GlobalAddress(Reference("resource_sim1t5ulpyse43vcfndkelufmzzap46aprkxtkc8hsdydpgfpxytdwq7dj")),
             },
             features: [],
             generic_substitutions: [],
           },
           object_type: ObjectType::Owned,
         },
       )
  └─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED FungibleVaultBalanceFieldPayload::V1(
         LiquidFungibleResource(Decimal("100000000000")),
       )
└─ internal_vault_sim1tpsesv77qvw782kknjks9g3x2msg8cc8ldshk28pkf6m6lkhun3sel across 1 partitions
  └─ Partition(64): 1 change
    └─ Set: Field(0)
       Value: UNLOCKED FungibleVaultBalanceFieldPayload::V1(
         LiquidFungibleResource(Decimal("0.952713628775")),
       )

OUTPUTS: 4
├─ Unit
├─ Tuple(
     Reference("resource_sim1tkl8f4ev0djxy2jjy4fpnaexhw0t0t39seqs26u0mfqjzn3e4m80zf"),
     Own("internal_component_sim1lzc5nd8cpn8waqsdkaqk5rlwu4mfu8l6h50wxk5md9r92e5gxpfcsq"),
   )
├─ Tuple(
     Reference("resource_sim1t5ulpyse43vcfndkelufmzzap46aprkxtkc8hsdydpgfpxytdwq7dj"),
     Own("internal_component_sim1lzl6y0826z9jurfum8mr9j5z758aljmsyzdx5a7adn7hqp02djwfzk"),
   )
└─ Unit

BALANCE CHANGES: 4
├─ Vault: internal_vault_sim1tz9uaalv8g3ahmwep2trlyj2m3zn7rstm9pwessa3k56me2fcduq2u
   ResAddr: resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3
   Change: -1.06958007912
├─ Vault: internal_vault_sim1tryac3w8efhstsnsygpr8y7dkgjh23eqw8samk73rr69qumddqxnnv
   ResAddr: resource_sim1tkl8f4ev0djxy2jjy4fpnaexhw0t0t39seqs26u0mfqjzn3e4m80zf
   Change: 100000000000
├─ Vault: internal_vault_sim1tzwjmzxhpusuaamzel4zktuve5k4mlsjerxwydry2h6zn7qmkz9ylv
   ResAddr: resource_sim1t5ulpyse43vcfndkelufmzzap46aprkxtkc8hsdydpgfpxytdwq7dj
   Change: 100000000000
└─ Vault: internal_vault_sim1tpsesv77qvw782kknjks9g3x2msg8cc8ldshk28pkf6m6lkhun3sel
   ResAddr: resource_sim1tknxxxxxxxxxradxrdxxxxxxxxx009923554798xxxxxxxxxakj8n3
   Change: 0.53479003956

NEW ENTITIES: 2
├─ Resource: resource_sim1tkl8f4ev0djxy2jjy4fpnaexhw0t0t39seqs26u0mfqjzn3e4m80zf
└─ Resource: resource_sim1t5ulpyse43vcfndkelufmzzap46aprkxtkc8hsdydpgfpxytdwq7dj