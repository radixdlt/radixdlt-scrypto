{
    "cargoRunner": null,
    "runnables": {
        "extraEnv": {},
        "problemMatcher": [
            "$rustc"
        ],
        "command": null,
        "extraArgs": []
    },
    "statusBar": {
        "clickAction": "openLogs"
    },
    "server": {
        "path": null,
        "extraEnv": {
            "RA_PROFILE": "*"
        }
    },
    "trace": {
        "server": "verbose",
        "extension": false
    },
    "debug": {
        "engine": "auto",
        "sourceFileMap": {
            "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
        },
        "openDebugPane": false,
        "engineSettings": {}
    },
    "restartServerOnConfigChange": false,
    "typing": {
        "continueCommentsOnNewline": true,
        "autoClosingAngleBrackets": {
            "enable": false
        }
    },
    "diagnostics": {
        "previewRustcOutput": false,
        "useRustcErrorCode": false,
        "disabled": [
            "unresolved-proc-macro"
        ],
        "enable": true,
        "experimental": {
            "enable": false
        },
        "remapPrefix": {},
        "styleLints": {
            "enable": false
        },
        "warningsAsHint": [],
        "warningsAsInfo": []
    },
    "discoverProjectRunner": null,
    "showUnlinkedFileNotification": true,
    "showRequestFailedErrorNotification": true,
    "showDependenciesExplorer": true,
    "testExplorer": false,
    "assist": {
        "emitMustUse": false,
        "expressionFillDefault": "todo"
    },
    "cachePriming": {
        "enable": true,
        "numThreads": 0
    },
    "cargo": {
        "allTargets": true,
        "autoreload": true,
        "buildScripts": {
            "enable": true,
            "invocationLocation": "workspace",
            "invocationStrategy": "per_workspace",
            "overrideCommand": null,
            "rebuildOnSave": true,
            "useRustcWrapper": false
        },
        "cfgs": {},
        "extraArgs": [],
        "extraEnv": {},
        "features": [],
        "noDefaultFeatures": false,
        "sysroot": "discover",
        "sysrootQueryMetadata": false,
        "sysrootSrc": null,
        "target": null,
        "targetDir": null,
        "unsetTest": [
            "core"
        ]
    },
    "checkOnSave": {
        "command": "check"
    },
    "check": {
        "allTargets": null,
        "command": "check",
        "extraArgs": [],
        "extraEnv": {},
        "features": null,
        "ignore": [],
        "invocationLocation": "workspace",
        "invocationStrategy": "per_workspace",
        "noDefaultFeatures": null,
        "overrideCommand": null,
        "targets": null,
        "workspace": true
    },
    "completion": {
        "autoimport": {
            "enable": true
        },
        "autoself": {
            "enable": true
        },
        "callable": {
            "snippets": "fill_arguments"
        },
        "fullFunctionSignatures": {
            "enable": false
        },
        "limit": null,
        "postfix": {
            "enable": true
        },
        "privateEditable": {
            "enable": false
        },
        "snippets": {
            "custom": {
                "Arc::new": {
                    "postfix": "arc",
                    "body": "Arc::new(${receiver})",
                    "requires": "std::sync::Arc",
                    "description": "Put the expression into an `Arc`",
                    "scope": "expr"
                },
                "Rc::new": {
                    "postfix": "rc",
                    "body": "Rc::new(${receiver})",
                    "requires": "std::rc::Rc",
                    "description": "Put the expression into an `Rc`",
                    "scope": "expr"
                },
                "Box::pin": {
                    "postfix": "pinbox",
                    "body": "Box::pin(${receiver})",
                    "requires": "std::boxed::Box",
                    "description": "Put the expression into a pinned `Box`",
                    "scope": "expr"
                },
                "Ok": {
                    "postfix": "ok",
                    "body": "Ok(${receiver})",
                    "description": "Wrap the expression in a `Result::Ok`",
                    "scope": "expr"
                },
                "Err": {
                    "postfix": "err",
                    "body": "Err(${receiver})",
                    "description": "Wrap the expression in a `Result::Err`",
                    "scope": "expr"
                },
                "Some": {
                    "postfix": "some",
                    "body": "Some(${receiver})",
                    "description": "Wrap the expression in an `Option::Some`",
                    "scope": "expr"
                }
            }
        },
        "termSearch": {
            "enable": false
        }
    },
    "files": {
        "excludeDirs": [],
        "watcher": "client"
    },
    "highlightRelated": {
        "breakPoints": {
            "enable": true
        },
        "closureCaptures": {
            "enable": true
        },
        "exitPoints": {
            "enable": true
        },
        "references": {
            "enable": true
        },
        "yieldPoints": {
            "enable": true
        }
    },
    "hover": {
        "actions": {
            "debug": {
                "enable": true
            },
            "enable": true,
            "gotoTypeDef": {
                "enable": true
            },
            "implementations": {
                "enable": true
            },
            "references": {
                "enable": false
            },
            "run": {
                "enable": true
            }
        },
        "documentation": {
            "enable": true,
            "keywords": {
                "enable": true
            }
        },
        "links": {
            "enable": true
        },
        "memoryLayout": {
            "alignment": "hexadecimal",
            "enable": true,
            "niches": false,
            "offset": "hexadecimal",
            "size": "both"
        },
        "show": {
            "structFields": null,
            "traitAssocItems": null
        }
    },
    "imports": {
        "granularity": {
            "enforce": false,
            "group": "crate"
        },
        "group": {
            "enable": true
        },
        "merge": {
            "glob": true
        },
        "preferNoStd": false,
        "preferPrelude": false,
        "prefix": "plain"
    },
    "inlayHints": {
        "bindingModeHints": {
            "enable": false
        },
        "chainingHints": {
            "enable": true
        },
        "closingBraceHints": {
            "enable": true,
            "minLines": 25
        },
        "closureCaptureHints": {
            "enable": false
        },
        "closureReturnTypeHints": {
            "enable": "never"
        },
        "closureStyle": "impl_fn",
        "discriminantHints": {
            "enable": "never"
        },
        "expressionAdjustmentHints": {
            "enable": "never",
            "hideOutsideUnsafe": false,
            "mode": "prefix"
        },
        "implicitDrops": {
            "enable": false
        },
        "lifetimeElisionHints": {
            "enable": "never",
            "useParameterNames": false
        },
        "maxLength": 25,
        "parameterHints": {
            "enable": true
        },
        "rangeExclusiveHints": {
            "enable": false
        },
        "reborrowHints": {
            "enable": "never"
        },
        "renderColons": true,
        "typeHints": {
            "enable": true,
            "hideClosureInitialization": false,
            "hideNamedConstructor": false
        }
    },
    "interpret": {
        "tests": false
    },
    "joinLines": {
        "joinAssignments": true,
        "joinElseIf": true,
        "removeTrailingComma": true,
        "unwrapTrivialBlock": true
    },
    "lens": {
        "debug": {
            "enable": true
        },
        "enable": true,
        "forceCustomCommands": true,
        "implementations": {
            "enable": true
        },
        "location": "above_name",
        "references": {
            "adt": {
                "enable": false
            },
            "enumVariant": {
                "enable": false
            },
            "method": {
                "enable": false
            },
            "trait": {
                "enable": false
            }
        },
        "run": {
            "enable": true
        }
    },
    "linkedProjects": [],
    "lru": {
        "capacity": null,
        "query": {
            "capacities": {}
        }
    },
    "notifications": {
        "cargoTomlNotFound": true,
        "unindexedProject": false
    },
    "numThreads": null,
    "procMacro": {
        "attributes": {
            "enable": true
        },
        "enable": true,
        "ignored": {},
        "server": null
    },
    "references": {
        "excludeImports": false,
        "excludeTests": false
    },
    "rustc": {
        "source": null
    },
    "rustfmt": {
        "extraArgs": [],
        "overrideCommand": null,
        "rangeFormatting": {
            "enable": false
        }
    },
    "semanticHighlighting": {
        "doc": {
            "comment": {
                "inject": {
                    "enable": true
                }
            }
        },
        "nonStandardTokens": true,
        "operator": {
            "enable": true,
            "specialization": {
                "enable": false
            }
        },
        "punctuation": {
            "enable": false,
            "separate": {
                "macro": {
                    "bang": false
                }
            },
            "specialization": {
                "enable": false
            }
        },
        "strings": {
            "enable": true
        }
    },
    "signatureInfo": {
        "detail": "full",
        "documentation": {
            "enable": true
        }
    },
    "workspace": {
        "symbol": {
            "search": {
                "kind": "only_types",
                "limit": 128,
                "scope": "workspace"
            }
        }
    }
}