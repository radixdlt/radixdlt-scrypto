name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  sbor-unit-tests:
    name: Run SBOR unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test --verbose
      working-directory: sbor
    - name: Run tests (no_std)
      run: cargo test --verbose --no-default-features --features alloc
      working-directory: sbor
    - name: Run derive tests
      run: cargo test --verbose
      working-directory: sbor-derive
  sbor-integration-tests:
    name: Run SBOR integration tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test --verbose
      working-directory: sbor-tests
    - name: Run tests (no_std)
      run: cargo test --verbose --no-default-features --features alloc
      working-directory: sbor-tests
    - name: Run bench
      run: cargo bench --verbose
      working-directory: sbor-tests
  scrypto-unit-tests:
    name: Run Scrypto unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test --verbose
      working-directory: scrypto
    - name: Run tests (no_std)
      run: cargo test --verbose --no-default-features --features alloc
      working-directory: scrypto
    - name: Run abi tests
      run: cargo test --verbose
      working-directory: scrypto-abi
    - name: Run derive tests
      run: cargo test --verbose
      working-directory: scrypto-derive
  scrypto-integration-tests:
    name: Run Scrypto integration tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test --verbose
      working-directory: scrypto-tests
    - name: Run tests (no_std)
      run: cargo test --verbose --no-default-features --features alloc
      working-directory: scrypto-tests
  scrypto-examples:
    name: Run Scrypto examples
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Add wasm target
      run: rustup target add wasm32-unknown-unknown
    - name: Add wasm target (nightly)
      run: rustup +nightly target add wasm32-unknown-unknown
    - name: Build account
      run: cargo build --target wasm32-unknown-unknown --release
      working-directory: assets/account
    - name: Build system
      run: cargo build --target wasm32-unknown-unknown --release
      working-directory: assets/system
    - name: Build and test hello-world
      run: cargo build --target wasm32-unknown-unknown --release && cargo test --release
      working-directory: examples/hello-world
    - name: Build and test no-std
      run: cargo build --target wasm32-unknown-unknown --release && cargo test --release
      working-directory: examples/no-std
  radix-engine:
    name: Run Radix Engine tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Add wasm target
      run: rustup target add wasm32-unknown-unknown
    - name: Run tests
      run: cargo test --verbose
      working-directory: radix-engine
    - name: Run bench
      run: cargo bench
      working-directory: radix-engine
  transaction-manifest:
    name: Run transaction manifest tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test --verbose
      working-directory: transaction-manifest
  simulator:
    name: Run Simulator tests (resim)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Add wasm target
      run: rustup target add wasm32-unknown-unknown
    - name: Set LIBCLANG_PATH # See https://github.com/rust-lang/rust-bindgen/issues/1797
      if: runner.os == 'Windows'
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
    - name: Install dependencies
      if: runner.os == 'Windows'
      run: choco install llvm -y
    - name: Run tests
      run: bash ./tests/resim.sh
      working-directory: simulator
    - name: Run tests
      run: bash ./tests/manifest.sh
      working-directory: simulator
    - name: Run tests
      run: bash ./tests/scrypto.sh
      working-directory: simulator
